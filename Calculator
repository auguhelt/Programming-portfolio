// W.I.P Calculator made in processing using java.

String display = ""; // Tekst på displayet
int xPos2, yPos2, W1, H1;

void draw() {
  background(200);

  float n1 = 0, n2 = 0, n3 = 0, n4 = 0, n5 = 0, n6 = 0, n7 = 0, n8 = 0, n9 = 0, n10 = 0, n11 = 0, n12 = 0, n13 = 0, n14 = 0, n15 = 0, n16 = 0, n17 = 0, n18 = 0;
  String eq1 = "+", eq2 = "+", eq3 = "+", eq4 = "+", eq5 = "+", eq6 = "+", eq7 = "+", eq8 = "+", eq9 = "+", eq10 = "+", eq11 = "+", eq12 = "+", eq13 = "+", eq14 = "+", eq15 = "+", eq16 = "+", eq17 = "+";

  float[] nums = {n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16, n17, n18};
  String[] ops = {eq1, eq2, eq3, eq4, eq5, eq6, eq7, eq8, eq9, eq10, eq11, eq12, eq13, eq14, eq15, eq16, eq17};
  float numDone = nums[0];

  // Udregning
  if (xPos2 >= 100 && yPos2 >= 350 && W1 <= 180 && H1 <= 350 + 60 && mousePressed) {
    for (int i = 0; i < ops.length; i++) {
      String op = ops[i];
      float nNum = nums[i + 1];

      if (op.equals("+")) {
        numDone = numDone + nNum;
      } else if (op.equals("-")) {
        numDone = numDone - nNum;
      } else if (op.equals("*")) {
        numDone = numDone * nNum;
      } else if (op.equals("/")) {
        if (numDone == 0) {
          println("Error: Divide by 0");
          return;
        }
        numDone = numDone / nNum;
      } else if (op.equals("pow")) {
        numDone = pow(numDone, nNum);
      } else {
        println("Error: Unknown operator " + op);
        return;
      }
    }
    println("Result: " + numDone);
  }

  // =
  xPos2 = mouseX;
  yPos2 = mouseY;
  W1 = mouseX;
  H1 = mouseY;


  // Display område
  fill(255);
  rect(10, 10, 380, 50);
  fill(0);
  textSize(24);
  textAlign(LEFT, CENTER);
  text(display, 20, 35); // Vis det aktuelle displayindhold

  // Tegn nummer-knapper (0-9)
  int x, y;
  for (int i = 1; i < 10; i++) {
    x = 10 + ((i-1) % 3) * 90;
    y = 70 + ((i-1) / 3) * 70;

    drawButton(String.valueOf(i), x, y);
  }
  // Tegn 0
  drawButton("0", 10, 280, 260, 60); // Brug DrawButton til større dimensioner
  // Tegn operationsknapperne
  drawButton("+", 280, 70);
  drawButton("-", 280, 140);
  drawButton("*", 280, 210);
  drawButton("/", 280, 280);
  drawButton("=", 100, 350);
  drawButton("C", 10, 350);
  drawButton(".", 190, 350);


  // Tegn avancerede knapper
  drawButton("sin", 10, 420);
  drawButton("cos", 100, 420);
  drawButton("tan", 190, 420);
  drawButton("√", 280, 420); // Kvadratrod
  drawButton("^", 280, 350);  // Potens
}

// Funktion til at tegne en standerd knap (80x60)
void drawButton(String label, int x, int y) {
  drawButton(label, x, y, 80, 60);
}

// Funktion til at tegne en knap med brugerdefinerede dimensioner
void drawButton(String label, int x, int y, int width, int height) {

  fill(150);
  rect(x, y, width, height);
  fill(0);
  textSize(24);
  textAlign(CENTER, CENTER);
  text(label, x + width/2, y + height/2); // Tegn teksten centralt på knappen
}
// Tjek om musen trykker på en knap
boolean isButtonPressed(int x, int y, int width, int height) {
  return mouseX > x && mouseX < x + width && mouseY > y && mouseY < y + height;
}

boolean newInput = true; // Angiver, om et nyt input skal begynde

void mousePressed() {
  // Tjek knapper for tal (1-9)
  for (int i = 1; i < 10; i++) {
    int x = 10 + ((i - 1) % 3) * 90;
    int y = 70 + ((i - 1) / 3) * 70;
    if (isButtonPressed(x, y, 80, 60)) {
      handleNumber(i);
      return; // Undgå at tjekke andre knapper, hvis der allerede er trykket på en
    }
  }

  // Tjek "0"-knappen
  if (isButtonPressed(10, 280, 180, 60)) {
    handleNumber(0);
    return;
  }

  // Tjek operatortionknapper
  String[] ops = {"+", "-", "*", "/", "=", "C", ".", "sin", "cos", "tan", "√", "^"};
  int[] xPos = {280, 280, 280, 280, 100, 10, 190, 10, 100, 190, 280, 280};
  int[] yPos = {70, 140, 210, 280, 350, 350, 350, 420, 420, 420, 420, 350};
  int[] widths = {80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80};
  int[] heights = {60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60};

  for (int i = 0; i < ops.length; i++) {
    if (isButtonPressed(xPos[i], yPos[i], widths[i], heights[i])) {
      handleOperator(ops[i]);
      return;
    }
  }
}

// Håndter nummerinput
void handleNumber(int num) {
  if (newInput) {
    display = String.valueOf(num);
    newInput = false;
  } else {
    display += String.valueOf(num);
  }
}

// Håndter operatorinput
void handleOperator(String op) {
  if (op.equals("C")) {
    display = ""; //Displayet rydes
    newInput = true;
  } else if (op.equals(".")) {
    if (!display.contains(".")) {
      display += ".";
    }
  } else {
    if (!newInput) { // Tilføj kun operatøren, hvis det seneste input ikke er en operatør
      display += " " + op + " ";
    } else {
      // Erstat den tidligere operatør (hvis der er én)
      if (display.length() > 0 && "+-*/".contains(String.valueOf(display.charAt(display.length() - 2)))) {
        display = display.substring(0, display.length() - 3) + " " + op + " ";
      }
    }
    newInput = false; // Tillad fortsat input
  }
}

void setup() {
  size(400, 500);
}
